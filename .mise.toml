#:schema ./schema/mise.json

min_version = "2024.1.1"
[env]
_.file = [".env"]
_.path = ["./target/debug"]
FOO = "bar"
FOO_NUM = 1
THIS_PROJECT = "{{config_root}}-{{cwd}}"

[tools]
#node = 'lts'
"cargo:eza" = "0.17.0"
tiny = { version = "1", foo = "bar" }
golang = { version = "prefix:1.21", foo = "bar" }
python = { version = "latest", virtualenv = "{{env.HOME}}/.cache/venv" }
ruby = "3.1"

[plugins]
nnnn = 'https://github.com/mise-plugins/rtx-nodejs#main'

[alias.tiny]
abc = '1'

[tasks.format]
run = "cargo fmt -- --emit=files"

[tasks.clean]
run = "cargo clean"

[tasks.build]
alias = "b"
run = "cargo build --color always --all-features"
#sources = ["Cargo.*", "src/**/*.rs"]
#outputs = ["target/debug/mise"]

[tasks.ci]
depends = [
    "format",
    "build",
    "test"
]

[tasks."render:usage"]
depends = ["build"]
env = { CLICOLOR_FORCE = "0" }
run = "mise usage > mise.usage.kdl"

[tasks."render:completions"]
depends = ["build", "render:usage"]
env = { NO_COLOR = "1" }
run = '''
#!/usr/bin/env bash
set -xeuo pipefail
mise render-completion bash > completions/mise.bash
mise render-completion zsh > completions/_mise
mise render-completion fish > completions/mise.fish
'''

[tasks."render:mangen"]
depends = ["build"]
env = { NO_COLOR = "1" }
run = "mise render-mangen"

[tasks."render:help"]
depends = ["build"]
env = { NO_COLOR = "1" }
run = [
  "mise render-help",
  "mise x node@latest -- npx markdown-magic",
]
sources = ["mise"]
outputs = ["README.md"]

[tasks.render]
alias = "render"
depends = ["render:*"]

[tasks.pre-commit]
depends = ["render", "lint"]

[tasks.snapshots]
description = "Update test snapshots"
run = "cargo insta test --accept --unreferenced delete"

[tasks.release]
run = "cargo release"

[tasks."lint:fix"]
alias = "lint-fix"
run = "just lint-fix"

[tasks.signal-test]
run = "node ./test/fixtures/signal-test.js"

[tasks.test]
alias = 't'
run = [
  "mise run test:unit",
  "mise run test:e2e",
]

[tasks."test:unit"]
run = "cargo test"
env = { CARGO_TERM_COLOR = "always" }

[tasks."test:e2e"]
run = "just test-e2e"
# TODO: make this work when we have task args
#run = '''
#set -euo pipefail
#TEST="$1"
#if [ "TEST" = all ]; then
#    echo ./e2e/run_all_tests
#else
#    FILES="$(fd TEST e2e/)"
#    echo ./e2e/run_test "$FILES"
#fi
#'''

[tasks."docker:image"]
description = "build docker image from Dockerfile"
run = 'docker build $root -f $root/packaging/dev/Dockerfile -t ghcr.io/jdx/mise:dev'

[tasks."docker:cargo"]
description = "run cargo inside of development docker container"
run = 'docker run -ti --rm -v $root:/mise -w /mise ghcr.io/jdx/mise:dev cargo'

[tasks."docker:mise"]
description = "run mise inside of development docker container"
run = "mise run -- docker:cargo run --"

[tasks."docker:e2e"]
description = "run e2e tests inside of development docker container"
run = "mise run docker:mise run test:e2e"
