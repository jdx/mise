---
source: src/shell/xonsh.rs
expression: "xonsh.activate(exe, \" --status\".into())"
snapshot_kind: text
---
from xonsh.built_ins import XSH

def _mise(args):
  if args and args[0] in ('deactivate', 'shell', 'sh'):
    execx($(mise @(args)))
  else:
    mise @(args)

XSH.env['MISE_SHELL'] = 'xonsh'
XSH.aliases['mise'] = _mise
import shlex
import subprocess

extra_args = shlex.split(' --status')
def listen_prompt(): # Hook Events
    script = subprocess.run(
        ['/some/dir/mise', 'hook-env', *extra_args, '-s', 'xonsh'],
        env=XSH.env.detype(),
        stdout=subprocess.PIPE,
    ).stdout.decode()
    execx(script)

XSH.builtins.events.on_pre_prompt(listen_prompt) # Activate hook: before showing the prompt
