#!/usr/bin/env bash
set -euo pipefail
# shellcheck source-path=SCRIPTDIR
source "$(dirname "$0")/assert.sh"

if [ "${TEST_ALL:-}" != 1 ]; then
  exit
fi

rm -rf "$MISE_DATA_DIR/cache/poetry"

export POETRY_HOME=".poetry"
mise settings set experimental n

eval "$(mise activate bash)"
cat >.e2e.mise.toml <<EOF
[tools]
python = "3.12.0"
poetry = {version="1.7.1", pyproject="pyproject.toml"}
EOF
# TODO: get poetry to work with precompiled python
MISE_PYTHON_COMPILE=1 mise i python poetry -f && _mise_hook

assert "poetry --version" "Poetry (version 1.7.1)"
python3 -V
poetry install && _mise_hook
mise i poetry -f && _mise_hook
poetry env info
assert "$(poetry env info -e) --version" "Python 3.12.0"
assert "echo \$VIRTUAL_ENV" "$(poetry env info -p)"

rm pyproject.toml
