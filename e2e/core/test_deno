#!/usr/bin/env bash

export MISE_LOCKFILE=1
export MISE_EXPERIMENTAL=1

if [[ ${MISE_DISABLE_TOOLS:-} == *deno* ]]; then
	warn "Skipping deno tests"
	exit 0
fi

cat <<EOF >.deno-version
1.43.3
EOF

mise i deno
assert_contains "mise x deno -- deno -V" "deno 1.43.3"

echo "=== Testing multi-platform lockfile generation for Deno ==="
# Test generating lockfile for multiple platforms (single call)
assert_contains "mise lock deno --platforms linux-x64,macos-arm64,windows-x64" "Targeting 3 platform(s): linux-x64, macos-arm64, windows-x64"
assert_contains "mise lock deno --platforms linux-x64,macos-arm64,windows-x64" "Lockfile updated at"

# Verify the lockfile exists and contains platform-specific data for all 3 platforms
assert "test -f mise.lock" ""
assert_contains "cat mise.lock" "linux-x64"
assert_contains "cat mise.lock" "macos-arm64"
assert_contains "cat mise.lock" "windows-x64"

# Verify URLs are platform-specific for Deno (uses Deno releases)
assert_contains "cat mise.lock" "dl.deno.land/release"
assert_contains "cat mise.lock" "deno-x86_64-unknown-linux-gnu.zip"
assert_contains "cat mise.lock" "deno-aarch64-apple-darwin.zip"
assert_contains "cat mise.lock" "deno-x86_64-pc-windows-msvc.zip"

# Verify the basic lockfile structure
assert_contains "cat mise.lock" 'backend = "core:deno"'
assert_contains "cat mise.lock" 'version = "1.43.3"'

echo "=== Validating lockfile metadata ==="
# Extract and validate specific platform metadata
lockfile_content=$(cat mise.lock)

# Verify each platform has the correct URL pattern
assert_contains "echo '$lockfile_content'" "deno-x86_64-unknown-linux-gnu.zip"
assert_contains "echo '$lockfile_content'" "deno-aarch64-apple-darwin.zip"
assert_contains "echo '$lockfile_content'" "deno-x86_64-pc-windows-msvc.zip"

# Validate URLs are complete and properly formatted
linux_url=$(echo "$lockfile_content" | grep -A5 "linux-x64" | grep "url = " | grep -o 'https://[^"]*')
assert_contains "echo '$linux_url'" "https://dl.deno.land/release/v1.43.3/deno-x86_64-unknown-linux-gnu.zip"

macos_url=$(echo "$lockfile_content" | grep -A5 "macos-arm64" | grep "url = " | grep -o 'https://[^"]*')
assert_contains "echo '$macos_url'" "https://dl.deno.land/release/v1.43.3/deno-aarch64-apple-darwin.zip"

windows_url=$(echo "$lockfile_content" | grep -A5 "windows-x64" | grep "url = " | grep -o 'https://[^"]*')
assert_contains "echo '$windows_url'" "https://dl.deno.land/release/v1.43.3/deno-x86_64-pc-windows-msvc.zip"

# Checksums and sizes are required - fail if missing
echo "Verifying checksums and sizes are present in lockfile"
assert_contains "cat mise.lock" "checksum = "
assert_contains "cat mise.lock" "size = "
