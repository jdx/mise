#!/usr/bin/env bash

# Test MCP protocol interactions in more detail
export MISE_EXPERIMENTAL=1

# Create a test environment with tasks and env vars
cat >mise.toml <<EOF
[env]
TEST_MCP_VAR = "test_value"
PROJECT_ENV = "development"

[tasks.test-task]
run = "echo 'Running test task'"
description = "A test task for MCP"

[tasks.build]
run = "echo 'Building...'"
description = "Build the project"
depends = ["test-task"]
alias = ["b"]

[tasks.lint]
run = "echo 'Linting code'"
description = "Run linters"
EOF

# Test that MCP server can start and handle basic protocol
echo "Testing MCP server startup and error handling..."

# Test that MCP server rejects invalid JSON
output=$(echo "not json" | mise mcp 2>&1 || true)
assert_contains "echo '$output'" "Failed to create service"

# Test that MCP server requires proper initialization
output=$(echo '{"jsonrpc":"2.0","id":1,"method":"unknown","params":{}}' | mise mcp 2>&1 || true)
assert_contains "echo '$output'" "Failed to create service"

# Test a minimal valid protocol interaction
# Note: The MCP server expects a specific handshake sequence
# For now we just verify it starts and handles errors gracefully
echo "Testing protocol handshake..."
output=$(printf '{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"0.1.0","capabilities":{}}}\n' | timeout 2s mise mcp 2>&1 || true)

# The server should at least start and process the initialize request
# even if it times out waiting for more input
if echo "$output" | grep -q "Failed to create service"; then
	echo "MCP server responded to protocol messages"
fi

# Verify that our mise.toml configuration would be loaded
# by checking that mise can see the tasks and env vars
echo "Verifying mise configuration is loaded..."
mise tasks ls | grep -q "test-task" || exit 1
mise tasks ls | grep -q "build" || exit 1
mise tasks ls | grep -q "lint" || exit 1

# Check that env vars would be available
eval "$(mise env 2>/dev/null)"
if [[ -n $TEST_MCP_VAR ]]; then
	echo "Environment variables are properly configured"
fi

echo "All MCP protocol tests passed!"
