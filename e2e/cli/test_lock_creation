#!/usr/bin/env bash

export MISE_LOCKFILE=1
export MISE_EXPERIMENTAL=1

echo "=== Testing basic lockfile creation detection ==="
# Create a mise.toml without a lockfile
cat <<EOF >mise.toml
[tools]
tiny = "1.0.0"
dummy = "2.0.0"
EOF

echo "=== Testing lockfile creation use case ==="
# Test when no lockfiles exist but mise.toml exists - should create lockfile
assert_contains "mise lock" "Targeting 1 platform(s)"
assert_contains "mise lock" "Lockfile updated at mise.lock"

# Verify the lockfile was created
assert "test -f mise.lock" ""

echo "=== Testing dry-run mode for lockfile creation ==="
# Remove lockfile and test dry-run
rm -f mise.lock
output=$(mise lock --dry-run)
assert_contains "echo '$output'" "Dry run - showing what would be processed"
assert_contains "echo '$output'" "tiny"
assert_contains "echo '$output'" "dummy"

echo "=== Testing tool filtering for lockfile creation ==="
# Test filtering by specific tool
output=$(mise lock tiny --dry-run)
assert_contains "echo '$output'" "tiny"
assert_not_contains "echo '$output'" "dummy"

# Test actual creation with filtering
rm -f mise.lock
assert_contains "mise lock tiny" "Lockfile updated at mise.lock"

echo "=== Testing lockfile regeneration ==="
# Test that existing lockfile gets updated
assert_contains "mise lock" "Lockfile updated at mise.lock"

echo "=== Testing platform filtering with existing lockfile ==="
# Platform filtering should work with existing lockfile
assert_contains "mise lock --platforms linux-x64" "Targeting 1 platform(s): linux-x64"

echo "=== Testing help for creation ==="
# Help should mention both updating and creating
assert_contains "mise lock --help" "Update lockfile checksums and URLs"

echo "=== Cleanup ==="
rm -f mise.toml mise.lock

echo "mise lock creation tests passed!"
