#!/usr/bin/env bash

# Test that npm backend properly uses bun when configured

require_cmd() {
	if ! command -v "$1" >/dev/null 2>&1; then
		echo "Test requires $1 to be installed"
		exit 0 # Skip test if dependency not available
	fi
}

# Skip if neither npm nor bun are available
if ! command -v npm >/dev/null 2>&1 && ! command -v bun >/dev/null 2>&1; then
	echo "Test requires either npm or bun to be installed"
	exit 0
fi

# Test 1: With npm available but bun mode disabled (default)
if command -v npm >/dev/null 2>&1; then
	echo "Testing npm backend with npm available..."
	unset MISE_NPM_BUN

	# Test listing versions
	output=$(mise ls-remote npm:tiny 2>&1 | head -5)
	if [[ -n $output ]] && [[ $output != *"error"* ]]; then
		echo "✓ npm backend lists versions using npm"
	else
		echo "ERROR: Failed to list versions with npm"
		echo "Got: $output"
		exit 1
	fi

	# Test latest version
	output=$(mise latest npm:tiny 2>&1)
	if [[ -n $output ]] && [[ $output != *"error"* ]]; then
		echo "✓ npm backend gets latest version using npm"
	else
		echo "ERROR: Failed to get latest version with npm"
		echo "Got: $output"
		exit 1
	fi
fi

# Test 2: With bun available and bun mode enabled
if command -v bun >/dev/null 2>&1; then
	echo "Testing npm backend with bun mode enabled..."

	# First check if bun supports the 'view' command
	if bun view tiny versions --json >/dev/null 2>&1; then
		echo "INFO: bun supports 'view' command, testing with bun mode..."
		export MISE_NPM_BUN=true

		# Test listing versions
		output=$(mise ls-remote npm:tiny 2>&1 | head -5)
		if [[ -n $output ]] && [[ $output != *"error"* ]]; then
			echo "✓ npm backend lists versions using bun"
		else
			echo "ERROR: Failed to list versions with bun"
			echo "Got: $output"
			exit 1
		fi

		# Test latest version
		output=$(mise latest npm:tiny 2>&1)
		if [[ -n $output ]] && [[ $output != *"error"* ]]; then
			echo "✓ npm backend gets latest version using bun"
		else
			echo "ERROR: Failed to get latest version with bun"
			echo "Got: $output"
			exit 1
		fi

		unset MISE_NPM_BUN
	else
		echo "INFO: bun does not support 'view' command, skipping bun view tests"
		echo "NOTE: npm backend should handle this gracefully by falling back to npm"
	fi
fi

# Test 3: Test installation with bun mode
if command -v bun >/dev/null 2>&1; then
	echo "Testing npm package installation with bun..."
	export MISE_NPM_BUN=true

	# Clean up any previous installation
	rm -rf ~/.local/share/mise/installs/npm-tiny

	# Try to install a small package
	output=$(mise install npm:tiny@latest 2>&1)
	if [[ $output == *"bun install"* ]] || [[ -d ~/.local/share/mise/installs/npm-tiny ]]; then
		echo "✓ npm backend attempts installation using bun"
		# Clean up
		mise uninstall npm:tiny@latest >/dev/null 2>&1 || true
	else
		echo "INFO: Bun installation test skipped or failed (non-critical)"
	fi

	unset MISE_NPM_BUN
fi

echo "✓ npm bun behavior test completed"
